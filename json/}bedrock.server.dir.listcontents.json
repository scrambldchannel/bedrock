{
    "DataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n",
    "DataSource": {
        "Type": "None"
    },
    "EpilogProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#################################################################################################\r\n##~~Join the bedrock TM1 community on GitHub https://github.com/cubewise-code/bedrock Ver 4.0~~##\r\n#################################################################################################\r\n\r\n### VALIDATION ###\r\n# Check that batch file exists\r\nIf( FileExists( sCommand ) = 0 );\r\n    nErrors = 1;\r\n    sMessage = 'Batch file not found: ' | sCommand;\r\n    LogOutput( cMsgErrorLevel, Expand( cMsgErrorContent ) );\r\nEndIf;\r\n\r\n### Execute Batch File ###\r\nIf( nErrors = 0 );\r\n  If(sOS @= 'Windows');\r\n    ExecuteCommand ( sCommand, 1 );\r\n  Else;\r\n    ExecuteCommand ( 'sh ' | sCommand, 1 );\r\n  EndIf;\r\nEndIf;\r\n\r\n### Delete temporary batch file\r\nASCIIDelete ( sCommand );\r\n\r\n### Return code & final error message handling\r\nIf( nErrors > 0 );\r\n    sMessage = 'the process incurred at least 1 error. Please see above lines in this file for more details.';\r\n    nProcessReturnCode = 0;\r\n    LogOutput( cMsgErrorLevel, Expand( cMsgErrorContent ) );\r\n    sProcessReturnCode = Expand( '%sProcessReturnCode% Process:%cThisProcName% completed with errors. Check tm1server.log for details.' );\r\n    If( pStrictErrorHandling = 1 );\r\n        ProcessQuit;\r\n    EndIf;\r\nElse;\r\n    sProcessAction = Expand( 'Process:%cThisProcName% successfully listed contents from %pSrcDir% .' );\r\n    sProcessReturnCode = Expand( '%sProcessReturnCode% %sProcessAction%' );\r\n    nProcessReturnCode = 1;\r\n    If( pLogoutput = 1 );\r\n        LogOutput('INFO', Expand( sProcessAction ) );\r\n    EndIf;\r\nEndIf;\r\n\r\n### End Epilog ###",
    "HasSecurityAccess": true,
    "MetadataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n",
    "Name": "}bedrock.server.dir.listcontents",
    "Parameters": [
        {
            "Name": "pLogOutput",
            "Prompt": "OPTIONAL: Write parameters and action summary to server message log (Boolean True = 1)",
            "Type": "Numeric",
            "Value": "0"
        },
        {
            "Name": "pStrictErrorHandling",
            "Prompt": "OPTIONAL: On encountering any error exit with major error status by ProcessQuit after writing to the server message log (Boolean True = 1)",
            "Type": "Numeric",
            "Value": "0"
        },
        {
            "Name": "pSrcDir",
            "Prompt": "OPTIONAL: Data Directory (Leave Blank to use TM1 Settings)",
            "Type": "String",
            "Value": ""
        }
    ],
    "PrologProcedure": "#Region CallThisProcess\r\n# A snippet of code provided as an example how to call this process should the developer be working on a system without access to an editor with auto-complete.\r\nIf( 1 = 0 );\r\n    ExecuteProcess( '}bedrock.server.dir.listcontents', 'pLogOutput', pLogOutput,\r\n      'pStrictErrorHandling', pStrictErrorHandling,\r\n\t    'pSrcDir', ''\r\n\t);\r\nEndIf;\r\n#EndRegion CallThisProcess\r\n\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#################################################################################################\r\n##~~Join the bedrock TM1 community on GitHub https://github.com/cubewise-code/bedrock Ver 4.0~~##\r\n#################################################################################################\r\n\r\n#Region @DOC\r\n# Description:\r\n# This process will list all files and processes in the data directory as text file output in the data directory itself.\r\n\r\n# Use case: Intended for production.\r\n# 1/ Obtain a listing of files in any folder.\r\n\r\n# Note:\r\n# The TI 1st creates a batch file that will list all the different type of objects seperately and then executes it.\r\n# In some cases the path to the batch file (in the data directory) must be fully qualified.\r\n# The batch file is deleted in Epilog.\r\n#EndRegion @DOC\r\n\r\n### TO DELETE - just included as temp measure so process compiles\r\npDebug = 0;\r\n### TO DELETE - just included as temp measure so process compiles\r\n\r\n### Global Variables\r\nStringGlobalVariable('sProcessReturnCode');\r\nNumericGlobalVariable('nProcessReturnCode');\r\nnProcessReturnCode= 0;\r\n\r\n### Constants ###\r\ncThisProcName       = GetProcessName();\r\ncUserName           = TM1User();\r\ncTimeStamp          = TimSt( Now, '\\Y\\m\\d\\h\\i\\s' );\r\ncRandomInt          = NumberToString( INT( RAND( ) * 1000 ));\r\ncMsgErrorLevel      = 'ERROR';\r\ncMsgErrorContent    = 'User:%cUserName% Process:%cThisProcName% ErrorMsg:%sMessage%';\r\ncLogInfo            = 'Process:%cThisProcName% run with parameters pSrcDir:%pSrcDir%.' ;\r\n#cDebugFile = GetProcessErrorFileDirectory | cProcess | '.' | cTimeStamp | '.' | sRandomInt ;\r\n\r\n## LogOutput parameters\r\nIF( pLogoutput = 1 );\r\n    LogOutput('INFO', Expand( cLogInfo ) );\r\nENDIF;\r\n\r\n## check operating system\r\nIf( SubSt( GetProcessErrorFileDirectory, 2, 1 ) @= ':' );\r\n  sOS = 'Windows';\r\n  sOSDelim = '\\';\r\nElseIf( Scan( '/', GetProcessErrorFileDirectory ) > 0 );\r\n  sOS = 'Linux';\r\n  sOSDelim = '/';\r\nElse;\r\n  sOS = 'Windows';\r\n  sOSDelim = '\\';\r\nEndIf;\r\n\r\nIf( sOS @= 'Linux' );\r\n  cBatchFile = LOWER(cThisProcName) | '.sh';\r\nElse;\r\n  cBatchFile = cThisProcName | '.bat';\r\nEndIf;\r\n\r\n### Build Command ###\r\nnErrors         = 0;\r\n\r\nIf( pSrcDir @= '' );\r\n    # If no data directory provided then use current directory\r\n    sCommand    = cBatchFile;\r\nElse;\r\n    # Trim off trailing backslash if present\r\n    If( SubSt( pSrcDir, Long( pSrcDir ), 1 ) @= sOSDelim );\r\n        pSrcDir = SubSt( pSrcDir, 1, Long( pSrcDir ) - 1 );\r\n    EndIf;\r\n    # Check that data directory exists\r\n    If( FileExists( pSrcDir ) = 0 );\r\n        nErrors  = 1;\r\n        sMessage = 'Data directory does not exist: ' | pSrcDir;\r\n        LogOutput( cMsgErrorLevel, Expand( cMsgErrorContent ) );\r\n    Else;\r\n        sCommand = pSrcDir | sOSDelim | cBatchFile;\r\n    EndIf;\r\nEndIf;\r\n\r\n### Create Batch File ###\r\nDatasourceASCIIQuoteCharacter='';\r\nIf( sOS @= 'Windows');\r\n  ASCIIOUTPUT( sCommand, 'dir /b /s *.* > List_All_Data_Directory_Files.txt');\r\n  ASCIIOUTPUT( sCommand, 'dir /b /s }*.* > List_All_Control_Objects.txt');\r\n  ASCIIOUTPUT( sCommand, 'dir /b *.cub > List_All_Cubes.txt');\r\n\r\n  ASCIIOUTPUT( sCommand, 'dir /b *.dim > List_All_Dimensions.txt');\r\n  ASCIIOUTPUT( sCommand, 'dir /b *.pro > List_All_Processes.txt');\r\n  ASCIIOUTPUT( sCommand, 'dir /b *.cho > List_All_Chores.txt');\r\n  ASCIIOUTPUT( sCommand, 'dir /b *Bedrock*.pro > List_All_Bedrock_Processes.txt');\r\n\r\n  ASCIIOUTPUT( sCommand, 'dir /b /s *.vue > List_All_Views.txt');\r\n  ASCIIOUTPUT( sCommand, 'dir /b /s *.sub > List_All_Subsets.txt');\r\nElse;\r\n  ASCIIOUTPUT( sCommand, 'find \"$PWD\" -type f > List_All_Data_Directory_Files.txt ;');\r\n  ASCIIOUTPUT( sCommand, 'find \"$PWD\" -type f -name \"}*\" > List_All_Control_Objects.txt ;');\r\n  ASCIIOUTPUT( sCommand, 'find \"$PWD\" -type f -name \"*.cub\" > List_All_Cubes.txt ;');\r\n\r\n  ASCIIOUTPUT( sCommand, 'find \"$PWD\" -type f -name \"*.dim\" > List_All_Dimensions.txt ;');\r\n  ASCIIOUTPUT( sCommand, 'find \"$PWD\" -type f -name \"*.pro\" > List_All_Processes.txt ;');\r\n  ASCIIOUTPUT( sCommand, 'find \"$PWD\" -type f -name \"*.cho\" > List_All_Chores.txt ;');\r\n  ASCIIOUTPUT( sCommand, 'find \"$PWD\" -type f -iname \"*Bedrock*.pro\" > List_All_Bedrock_Processes.txt ;');\r\n\r\n  ASCIIOUTPUT( sCommand, 'find \"$PWD\" -type f -name \"*.vue\" > List_All_Views.txt ;');\r\n  ASCIIOUTPUT( sCommand, 'find \"$PWD\" -type f -name \"*.sub\" > List_All_Subsets.txt ;');\r\nEndIf;\r\n\r\n### End Prolog ###",
    "Variables": []
}