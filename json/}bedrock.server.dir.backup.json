{
    "DataProcedure": "",
    "DataSource": {
        "Type": "None"
    },
    "EpilogProcedure": "#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#################################################################################################\r\n##~~Join the bedrock TM1 community on GitHub https://github.com/cubewise-code/bedrock Ver 4.0~~##\r\n#################################################################################################\r\n\r\n# Create backup directory\r\nIf(sOS @= 'Windows');\r\n  ExecuteCommand ( 'Bedrock.MkDir.bat', 1 );\r\nElse;\r\n  ExecuteCommand ( 'mkdir \"' | sBackupDir |'\"', 1);\r\nEndIf;\r\n# Ensure backup directory created else abort\r\nIf( FileExists( sBackupDir ) = 0 );\r\n    nErrors = 1;\r\n    sMessage = 'Process Quit: Could not create backup directory: ' | sBackupDir;\r\n    LogOutput( cMsgErrorLevel, Expand( cMsgErrorContent ) );\r\n    ProcessQuit;\r\nELSE;\r\n      sMessage = 'Backup directory exists: ' | sBackupDir;\r\n      LogOutput('INFO', sMessage );\r\nEndIf;\r\n\r\n### Copy Data Dir to Backup ###\r\nIf(sOS @= 'Windows');\r\n  ExecuteCommand ( 'Bedrock.Server.DataDir.Backup.bat', 1 );\r\nElse;\r\n  ExecuteCommand ( sText, 1 );\r\nEndIf;\r\n\r\n### Delete temporary files ###\r\nsFileName = 'Bedrock.Server.DataDir.Backup.bat' ;\r\nASCIIDelete( LOWER(sFileName) );\r\nsFileName = 'Bedrock.MkDir.bat';\r\nASCIIDelete( LOWER(sFileName) );\r\nsFileName = sFileNameExclude;\r\nASCIIDelete( LOWER(sFileNameExclude) );\r\n\r\nsMessage = 'Temporary files deleted.';\r\nIf( pLogoutput = 1 );\r\n \tLogOutput('INFO', sMessage );\r\nEndIf;\r\n\r\n### Return code & final error message handling\r\nIf( nErrors > 0 );\r\n    sMessage = 'the process incurred at least 1 error. Please see above lines in this file for more details.';\r\n    nProcessReturnCode = 0;\r\n    LogOutput( cMsgErrorLevel, Expand( cMsgErrorContent ) );\r\n    sProcessReturnCode = Expand( '%sProcessReturnCode% Process:%cThisProcName% completed with errors. Check tm1server.log for details.' );\r\n    If( pStrictErrorHandling = 1 );\r\n        ProcessQuit;\r\n    EndIf;\r\nElse;\r\n    sProcessAction = Expand( 'Process:%cThisProcName% successfully Backed up Dir %pSrcDir% to dir %pTgtDir%.' );\r\n    sProcessReturnCode = Expand( '%sProcessReturnCode% %sProcessAction%' );\r\n    nProcessReturnCode = 1;\r\n    If( pLogoutput = 1 );\r\n        LogOutput('INFO', Expand( sProcessAction ) );\r\n    EndIf;\r\nEndIf;\r\n\r\n### End Epilog ###",
    "HasSecurityAccess": true,
    "MetadataProcedure": "",
    "Name": "}bedrock.server.dir.backup",
    "Parameters": [
        {
            "Name": "pLogOutput",
            "Prompt": "OPTIONAL: Write parameters and action summary to server message log (Boolean True = 1)",
            "Type": "Numeric",
            "Value": "0"
        },
        {
            "Name": "pStrictErrorHandling",
            "Prompt": "OPTIONAL: On encountering any error exit with major error status by ProcessQuit after writing to the server message log (Boolean True = 1)",
            "Type": "Numeric",
            "Value": "0"
        },
        {
            "Name": "pSrcDir",
            "Prompt": "REQUIRED: Source Directory to Backup",
            "Type": "String",
            "Value": "."
        },
        {
            "Name": "pTgtDir",
            "Prompt": "REQUIRED: Destination Directory for Backup",
            "Type": "String",
            "Value": ""
        },
        {
            "Name": "pExcludeFilter",
            "Prompt": "OPTIONAL: Exclude filter (To include all files use pFilterExclude = \"\"\"\")",
            "Type": "String",
            "Value": ".log & .cfg & .csv & .cmal & .txt & .feeders"
        },
        {
            "Name": "pDelim",
            "Prompt": "OPTIONAL: Delimiter",
            "Type": "String",
            "Value": "&"
        },
        {
            "Name": "pSubDirCopy",
            "Prompt": "OPTIONAL: Include subdirectories? (Boolean True = 1)",
            "Type": "Numeric",
            "Value": "1"
        },
        {
            "Name": "pRobocopy",
            "Prompt": "OPTIONAL: Use robocopy? (Boolean True = 1) WIN only",
            "Type": "Numeric",
            "Value": "0"
        }
    ],
    "PrologProcedure": "#Region CallThisProcess\r\n# A snippet of code provided as an example how to call this process should the developer be working on a system without access to an editor with auto-complete.\r\nIf( 1 = 0 );\r\n    ExecuteProcess( '}bedrock.server.dir.backup', 'pLogOutput', pLogOutput,\r\n      'pStrictErrorHandling', pStrictErrorHandling,\r\n    \t'pSrcDir', '.', 'pTgtDir', '','pExcludeFilter', '.cub & .dim', 'pDelim', '&', 'pSubDirCopy ', 1, 'pRobocopy ', 1\r\n    );\r\nEndIf;\r\n#EndRegion CallThisProcess\r\n\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#################################################################################################\r\n##~~Join the bedrock TM1 community on GitHub https://github.com/cubewise-code/bedrock Ver 4.0~~##\r\n#################################################################################################\r\n\r\n#Region @DOC\r\n# Description:\r\n# This process will back up the Data Directory.\r\n\r\n# Use case: Intended for development and production.\r\n# 1/ Backup Data directory every day during development.\r\n# 2/ Backup Data directory every day during planning cycle.\r\n\r\n# Note:\r\n# Naturally, a valid data directory (pSrcDir) and targer directory (pTgtDir) is mandatory otherwise the process will abort.\r\n#EndRegion @DOC\r\n\r\n### Global Variables\r\nStringGlobalVariable('sProcessReturnCode');\r\nNumericGlobalVariable('nProcessReturnCode');\r\nnProcessReturnCode= 0;\r\n\r\n### Constants ###\r\ncThisProcName       = GetProcessName();\r\ncUserName           = TM1User();\r\ncTimeStamp          = TimSt( Now, '\\Y\\m\\d\\h\\i\\s' );\r\ncRandomInt          = NumberToString( INT( RAND( ) * 1000 ));\r\ncMsgErrorLevel      = 'ERROR';\r\ncMsgErrorContent    = 'User:%cUserName% Process:%cThisProcName% Message:%sMessage%';\r\ncLogInfo            = 'Process:%cThisProcName% run with parameters pSrcDir:%pSrcDir%, pTgtDir:%pTgtDir%, pExcludeFilter:%pExcludeFilter%, pDelim:%pDelim%, pSubDirCopy:%pSubDirCopy%, pRobocopy:%pRobocopy%.' ;\r\n\r\n## LogOutput parameters\r\nIF( pLogoutput = 1 );\r\n    LogOutput('INFO', Expand( cLogInfo ) );\r\nENDIF;\r\n\r\n### Validate Parameters ###\r\nnErrors             = 0;\r\n\r\n# Remove leading and/or trailing spaces\r\npSrcDir             = Trim( pSrcDir );\r\npTgtDir             = Trim( pTgtDir );\r\n\r\n## check operating system\r\nIf( SubSt( GetProcessErrorFileDirectory, 2, 1 ) @= ':' );\r\n  sOS = 'Windows';\r\n  sOSDelim = '\\';\r\nElseIf( Scan( '/', GetProcessErrorFileDirectory ) > 0 );\r\n  sOS = 'Linux';\r\n  sOSDelim = '/';\r\nElse;\r\n  sOS = 'Windows';\r\n  sOSDelim = '\\';\r\nEndIf;\r\n\r\n# Remove trailing \\ from directory names if present\r\nIf( SubSt( pSrcDir, Long( pSrcDir ), 1 ) @= sOSDelim );\r\n    pSrcDir         = SubSt( pSrcDir, 1, Long( pSrcDir ) - 1 );\r\nEndIf;\r\nIf( SubSt( pTgtDir, Long( pTgtDir ),1 ) @= sOSDelim );\r\n    pTgtDir         = SubSt( pTgtDir, 1, Long( pTgtDir ) - 1 );\r\nEndIf;\r\n\r\n# Check that data directory has been specified\r\nIf( pSrcDir @= '' );\r\n    nErrors         = 1;\r\n    sMessage        = 'No data directory specified.';\r\n    LogOutput( cMsgErrorLevel, Expand( cMsgErrorContent ) );\r\nElseIf( FileExists( pSrcDir ) = 0 );\r\n    nErrors         = 1;\r\n    sMessage        = 'Source data directory for backup does not exist: ' | pSrcDir;\r\n    LogOutput( cMsgErrorLevel, Expand( cMsgErrorContent ) );\r\nEndIf;\r\n\r\n# Check that target directory has been specified\r\nIf( pTgtDir @= '' );\r\n    nErrors         = 1;\r\n    sMessage        = 'No backup directory specified';\r\n    LogOutput( cMsgErrorLevel, Expand( cMsgErrorContent ) );\r\nElseIf( FileExists( pTgtDir ) = 0 );\r\n    nErrors         = 1;\r\n    sMessage        = 'Destination directory for backup does not exist: ' | pTgtDir;\r\n    LogOutput( cMsgErrorLevel, Expand( cMsgErrorContent ) );\r\nEndIf;\r\n\r\n### Check for errors before continuing\r\nIf( nErrors <> 0 );\r\n  If( pStrictErrorHandling = 1 );\r\n      ProcessQuit;\r\n  Else;\r\n      ProcessBreak;\r\n  EndIf;\r\nEndIf;\r\n\r\n### Save the model to disk\r\nExecuteProcess( '}bedrock.server.savedataall', 'pStrictErrorHandling', pStrictErrorHandling );\r\nsMessage = 'TM1 Save Data All Complete.';\r\nIf( pLogoutput = 1 );\r\n\tLogOutput('INFO', sMessage );\r\nEndIf;\r\n\r\n### Create batch files\r\nDatasourceASCIIQuoteCharacter='';\r\n\r\n### Create Make Directory Batch File\r\nsFileName           = 'Bedrock.MkDir.bat' ;\r\nsBackupDir          = pTgtDir | sOSDelim | 'TM1Backup_' | cTimeStamp;\r\nIf(sOS @= 'Windows');\r\n  ASCIIOUTPUT( sFileName, 'md \"' | sBackupDir |'\"' );\r\nEndIf;\r\n\r\n### Create Exclude File ###\r\nIf(pRobocopy = 1);\r\n\t# robocopy uses different file format with rcj file and * wildcard character\r\n\tsFileNameExclude =  pSrcDir | sOSDelim | 'Excludes' | cTimeStamp | cRandomInt| '.rcj';\r\n    ASCIIOUTPUT( sFileNameExclude, '/xf');\r\n    sExcludeWCPrefix = '*';\r\nElse;\r\n\tsFileNameExclude =  'Excludes' | cTimeStamp | cRandomInt| '.txt';\r\n    sExcludeWCPrefix = '';\r\nEndIf;\r\npExcludeFilter = TRIM(pExcludeFilter);\r\n\r\nIf(pExcludeFilter @<> '');\r\n    If( SCAN(pDelim, pExcludeFilter) > 0);\r\n        # parse multiple exclusions\r\n        While(LONG(pExcludeFilter) > 0);\r\n            If(SCAN(pDelim, pExcludeFilter) > 0);\r\n                sExcludePart = TRIM(SUBST(pExcludeFilter, 1, SCAN(pDelim, pExcludeFilter) - 1));\r\n                pExcludeFilter = TRIM(DELET(pExcludeFilter, 1,SCAN(pDelim, pExcludeFilter) + LONG(pDelim) - 1));\r\n            Else;\r\n                sExcludePart = pExcludeFilter;\r\n                pExcludeFilter = '';\r\n            EndIf;\r\n            ASCIIOUTPUT( sFileNameExclude, sExcludeWCPrefix | sExcludePart);\r\n        End;\r\n    Else;\r\n        ASCIIOUTPUT( sFileNameExclude, sExcludeWCPrefix | pExcludeFilter);\r\n    EndIf;\r\nElse;\r\n    ASCIIOUTPUT( sFileNameExclude, '');\r\nEndIf;\r\n\r\n### Create Batch File ###\r\nsFileName = 'Bedrock.Server.DataDir.Backup.bat';\r\nIf(sOS @= 'Windows');\r\n  If(pSubDirCopy = 1);\r\n  \tcSubDirCopy = '/s /e';\r\n  Else;\r\n  \tcSubDirCopy = '';\r\n  EndIf;\r\n  If(pRobocopy = 1);\r\n  \tsText = 'robocopy \"'| pSrcDir |'\" \"'| sBackupDir | '\" '  | cSubDirCopy | ' /job:\"'| sFileNameExclude | '\"';\r\n  Else;\r\n  \tsText = 'XCOPY \"'| pSrcDir |'\" \"'| sBackupDir|'\" /i /c '| cSubDirCopy |' /y /exclude:'| sFileNameExclude;\r\n  EndIf;\r\n  ASCIIOUTPUT( sFileName, '@ECHO OFF');\r\n  ASCIIOUTPUT( sFileName, sText );\r\nElse;\r\n  #sOS is Linux\r\n  If(pSubDirCopy = 1);\r\n  \tcSubDirCopy = 'r';\r\n  Else;\r\n  \tcSubDirCopy = '';\r\n  EndIf;\r\n  sText = 'rsync -' | cSubDirCopy | 't --exclude-from=' | sFileNameExclude | ' \"' | pSrcDir | '\" \"' | sBackupDir |'\"';\r\nEndIf;\r\n\r\nsMessage = 'Command Line: ' | sText;\r\nIf( pLogoutput = 1 );\r\n\tLogOutput('INFO', sMessage );\r\nEndIf;\r\n\r\n### End Prolog ###",
    "Variables": []
}