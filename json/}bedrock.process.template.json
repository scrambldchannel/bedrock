{
    "DataProcedure": "#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\nIf( pLogOutput >= 1 );\r\n   nDataRecordCount = nDataRecordCount + 1;\r\nEndIf;\r\n",
    "DataSource": {
        "Type": "None"
    },
    "EpilogProcedure": "#################################################################################################\r\n##~~Join the bedrock TM1 community on GitHub https://github.com/cubewise-code/bedrock Ver 4.0~~##\r\n#################################################################################################\r\n\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n### If required switch transaction logging back on\r\nCubeSetLogChanges( cCubeTgt, nCubeLogChanges );\r\n\r\n### Return code & final error message handling\r\nIf( nErrors > 0 );\r\n    sMessage = 'the process incurred at least 1 error. Please see above lines in this file for more details.';\r\n    nProcessReturnCode = 0;\r\n    LogOutput( cMsgErrorLevel, Expand( cMsgErrorContent ) );\r\n    sProcessReturnCode = Expand( '%sProcessReturnCode% Process:%cThisProcName% completed with errors. Check tm1server.log for details.' );\r\n    If( pStrictErrorHandling = 1 );\r\n        ProcessQuit;\r\n    EndIf;\r\nElse;\r\n    sProcessAction = Expand( 'Process:%cThisProcName% successfully %cAction%. %nDataRecordCount% records processed.' );\r\n    sProcessReturnCode = Expand( '%sProcessReturnCode% %sProcessAction%' );\r\n    nProcessReturnCode = 1;\r\n    If( pLogoutput = 1 );\r\n        LogOutput('INFO', Expand( sProcessAction ) );\r\n    EndIf;\r\nEndIf;\r\n\r\n### End Epilog ###",
    "HasSecurityAccess": false,
    "MetadataProcedure": "#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\nIf( pLogOutput >= 1 );\r\n   nMetadataRecordCount = nMetadataRecordCount + 1;\r\nEndIf;\r\n",
    "Name": "}bedrock.process.template",
    "Parameters": [
        {
            "Name": "pLogOutput",
            "Prompt": "Write status messages to tm1server.log file?",
            "Type": "Numeric",
            "Value": "0"
        },
        {
            "Name": "pStrictErrorHandling",
            "Prompt": "OPTIONAL: On encountering any error exit with major error status by ProcessQuit after writing to the server message log (Boolean True = 1)",
            "Type": "Numeric",
            "Value": "0"
        },
        {
            "Name": "pTemp",
            "Prompt": "Use temporary objects for views & subsets?",
            "Type": "Numeric",
            "Value": "1"
        }
    ],
    "PrologProcedure": "#################################################################################################\r\n##~~Join the bedrock TM1 community on GitHub https://github.com/cubewise-code/bedrock Ver 4.0~~##\r\n#################################################################################################\r\n\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#################################################################################################\r\n### CHANGE HISTORY:\r\n### MODIFICATION DATE \tCHANGED BY \t    COMMENT\r\n### YYYY-MM-DD \t\t    Developer Name \tCreation of Process\r\n### YYYY-MM-DD \t\t    Developer Name \tReason for modification here\r\n#################################################################################################\r\n#Region @DOC\r\n# Description:\r\n# A description of what this process does here.\r\n\r\n# Use case:\r\n# A description of the use cast for this process does here.\r\n\r\n# Note:\r\n# * List any notes for users to be aware of here.\r\n#EndRegion @DOC\r\n#################################################################################################\r\n\r\n#################################################################################################\r\n#Region Process Declarations\r\n### Process Parameters\r\n# a short description of what the process does goes here in cAction variable, e.g. \"copied data from cube A to cube B\". This will be written to the message log if pLogOutput=1\r\ncAction             = 'ran with no action';\r\ncParamArray         = '';\r\n# to use the parameter array remove the line above and uncomment the line below, adding the needed parameters in the provided format\r\n#cParamArray         = 'pLogOutput:%pLogOutput%, pTemp:%pTemp%';\r\n\r\n### Global Variables\r\nStringGlobalVariable('sProcessReturnCode');\r\nNumericGlobalVariable('nProcessReturnCode');\r\n\r\n### Standard Constants\r\ncThisProcName       = GetProcessName();\r\ncUserName           = TM1User();\r\ncTimeStamp          = TimSt( Now, '\\Y\\m\\d\\h\\i\\s' );\r\ncRandomInt          = NumberToString( INT( RAND( ) * 1000 ));\r\ncTempObjName        = Expand('%cThisProcName%_%cTimeStamp%_%cRandomInt%');\r\ncViewClr            = '}bedrock_clear_' | cTempObjName;\r\ncViewSrc            = '}bedrock_source_' | cTempObjName;\r\ncMsgErrorLevel      = 'ERROR';\r\ncMsgErrorContent    = 'Process:%cThisProcName% ErrorMsg:%sMessage%';\r\ncLogInfo            = 'Process:%cThisProcName% run with parameters %cParamArray%';\r\nsDelimEleStart      = '\u00a6';\r\nsDelimDim           = '&';\r\nsDelimEle           = '+';\r\nnProcessReturnCode  = 0;\r\nnErrors             = 0;\r\nnMetadataRecordCount= 0;\r\nnDataRecordCount    = 0;\r\n\r\n### Process Specific Constants\r\ncCubeSrc            = 'Source Cube';\r\ncCubeTgt            = 'Target Cube';\r\n\r\n#EndRegion Process Declarations\r\n#################################################################################################\r\n\r\n### LogOutput parameters\r\nIF( pLogoutput = 1 );\r\n    LogOutput('INFO', Expand( cLogInfo ) );\r\nENDIF;\r\n\r\n#################################################################################################\r\n#Region Validate Parameters\r\n\r\n# pLogOutput\r\nIf( pLogOutput >= 1 );\r\n    pLogOutput = 1;\r\nElse;\r\n    pLogOutput = 0;\r\nEndIf;\r\n\r\n# pTemp\r\nIf( pTemp >= 1 );\r\n    pTemp = 1;\r\nElse;\r\n    pTemp = 0;\r\nEndIf;\r\n\r\n# Validate source cube\r\nIf( Trim( cCubeSrc ) @= '' );\r\n    nErrors = nErrors + 1;\r\n    sMessage = 'No source cube specified.';\r\n    LogOutput( cMsgErrorLevel, Expand( cMsgErrorContent ) );\r\nElseIf( CubeExists( cCubeSrc ) = 0 );\r\n    nErrors = nErrors + 1;\r\n    sMessage = Expand( 'Invalid source cube specified: %cCubeSrc%.');\r\n    LogOutput( cMsgErrorLevel, Expand( cMsgErrorContent ) );\r\nEndIf;\r\n\r\n# Validate target cube\r\nIf( Trim( cCubeTgt ) @= '' );\r\n    nErrors = nErrors + 1;\r\n    sMessage = 'No target cube specified.';\r\n    LogOutput( cMsgErrorLevel, Expand( cMsgErrorContent ) );\r\nElseIf( CubeExists( cCubeTgt ) = 0 );\r\n    nErrors = nErrors + 1;\r\n    sMessage = Expand( 'Invalid target cube specified: %cCubeTgt%.');\r\n    LogOutput( cMsgErrorLevel, Expand( cMsgErrorContent ) );\r\nEndIf;\r\n\r\n# If any parameters fail validation then set data source of process to null and go directly to epilog\r\nIf( nErrors > 0 );\r\n    DataSourceType = 'NULL';\r\n    If( pStrictErrorHandling = 1 );\r\n        ProcessQuit;\r\n    Else;\r\n        ProcessBreak;\r\n    EndIf;\r\nEndIf;\r\n\r\n#################################################################################################\r\n#EndRegion Validate Parameters\r\n\r\n### If required switch transaction logging off (this should be done AFTER the escape/reject if parameters fail validation and BEFORE the zero out commences)\r\nnCubeLogChanges = CubeGetLogChanges( cCubeTgt );\r\nCubeSetLogChanges( cCubeTgt, 0 );\r\n\r\n\r\n#################################################################################################\r\n#Region - ZeroOut\r\n\r\nsProc       = '}bedrock.cube.data.clear';\r\n# Set filter as per logic requirement of the ZeroOut\r\nsFilter     = 'Dim1' | sDelimEleStart | 'El1' | sDelimDim | 'Dim2' | sDelimEleStart | 'El2';\r\nnRet        = ExecuteProcess( sProc, 'pLogOutput', pLogOutput,\r\n  'pStrictErrorHandling', pStrictErrorHandling,\r\n\t'pCube', cCubeTgt, 'pView', cViewClr, 'pFilter', sFilter,\r\n\t'pDimDelim', sDelimDim, 'pEleStartDelim', sDelimEleStart, 'pEleDelim', sDelimEle,\r\n\t'pTemp', pTemp\r\n);\r\nIf( nRet <> ProcessExitNormal() );\r\n    nErrors = nErrors + 1;\r\n    sMessage= 'Error in ZeroOut.';\r\n    DataSourceType = 'NULL';\r\n    LogOutput( cMsgErrorLevel, Expand( cMsgErrorContent ) );\r\nEndIf;\r\n\r\n#EndRegion - ZeroOut\r\n#################################################################################################\r\n\r\n#################################################################################################\r\n#Region - DataSource\r\n\r\nsProc   = '}bedrock.cube.view.create';\r\n# Set filter as per logic requirement of the data source processing\r\nsFilter = Expand('Dim1%sDelimEleStart%El1%%sDelimDim%Dim2%sDelimEleStart%El2%');\r\n# Adjust parameters for skipping of blanks / consols / rule calcs as required\r\nbSuppressNull   = 1;\r\nbSuppressC      = 1;\r\nbSuppressRule   = 1;\r\nnRet = ExecuteProcess( sProc, 'pLogOutput', pLogOutput,\r\n  'pStrictErrorHandling', pStrictErrorHandling,\r\n\t'pCube', cCubeSrc, 'pView', cViewSrc, 'pFilter', sFilter,\r\n\t'pSuppressZero', bSuppressNull, 'pSuppressConsol', bSuppressC, 'pSuppressRules', bSuppressRule,\r\n\t'pDimDelim', sDelimDim, 'pEleStartDelim', sDelimEleStart, 'pEleDelim', sDelimEle,\r\n\t'pTemp', pTemp\r\n);\r\nIf( nRet <> ProcessExitNormal() );\r\n    nErrors = nErrors + 1;\r\n    sMessage= 'Error in source view creation.';\r\n    DataSourceType = 'NULL';\r\n    LogOutput( cMsgErrorLevel, Expand( cMsgErrorContent ) );\r\nEndIf;\r\n\r\n### Assign data source\r\nIf( nErrors = 0 );\r\n    DatasourceType          = 'VIEW';\r\n    DatasourceNameForServer = cCubeSrc;\r\n    DatasourceCubeView      = cViewSrc;\r\nEndIf;\r\n\r\n#EndRegion - DataSource\r\n#################################################################################################\r\n\r\n### End Prolog ###",
    "Variables": []
}